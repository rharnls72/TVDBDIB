<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.web.curation.dao.reply.EpisodeReplyDao">
    <!-- Create -->
    <insert id="createReply">
        insert into
            episode_reply(
                eno
                <if test="parent_reply > 0">
                , parent_reply
                </if>
                , uno
                , content
            )
        values(
            #{no}
            <if test="parent_reply > 0">
            , #{parent_reply}
            </if>
            , #{writer_uno}
            , #{content}
        )
    </insert>
    <!-- Read -->
    <select id="getReplyList" resultType="Reply">
        SELECT 
            sub.erno                  AS `no`
            , sub.parent_reply        AS `parent_reply`
            , sub.content             AS `content`
            , sub.write_date          AS `write_date`
            , sub.writer_uno          AS `writer_uno`
            , sub.writer_nick_name    AS `writer_nick_name`
            , sub.writer_profile_pic  AS `writer_profile_pic`
            , sub.like_num            AS `like_num`
            , IF((
                SELECT
                    COUNT(erl.lno)
                FROM
                    `episode_reply_like` erl
                WHERE
                    erl.erno = sub.erno
                    AND
                    erl.uno = #{uno}
            ) > 0, true, false) AS `press_like`
            , IFNULL((
                SELECT
                    COUNT(er.erno)
                FROM
                    `episode_reply` er
                WHERE
                    er.parent_reply = sub.erno
            ), 0) AS `reply_num`
            , (
                SELECT
                    `content`
                FROM
                    `episode_reply_view` erv
                WHERE
                    erv.parent_reply = sub.erno
                ORDER BY erv.like_num DESC
                LIMIT 1
            ) AS `re_content`
        FROM
            (
            SELECT 
                *
            FROM
                `episode_reply_view`
            WHERE
                `eno` = #{no}
                AND
                `parent_reply` IS NULL
            ORDER BY `like_num` DESC
            LIMIT ${num} , 20
            ) sub
        ORDER BY `like_num` DESC, `no`
    </select>

    <select id="getReReplyList" resultType="Reply">
        SELECT 
            sub.erno                AS `no`,
            sub.parent_reply        AS `parent_reply`,
            sub.content             AS `content`,
            sub.write_date          AS `write_date`,
            sub.writer_uno          AS `writer_uno`,
            sub.writer_nick_name    AS `writer_nick_name`,
            sub.writer_profile_pic  AS `writer_profile_pic`,
            sub.like_num            AS `like_num`
            , IF((
                SELECT
                    COUNT(erl.lno)
                FROM
                    `episode_reply_like` erl
                WHERE
                    erl.erno = sub.erno
                    AND
                    erl.uno = #{uno}
            ) > 0, true, false) AS `press_like`
        FROM
            (
            SELECT 
                *
            FROM
                `episode_reply_view`
            WHERE
                `parent_reply` = #{no}
            ORDER BY `like_num` DESC
            LIMIT ${num} , 20
            ) sub
        ORDER BY `like_num` DESC, `no`
    </select>

    <!-- Update -->
    <update id="modifyReply">
        update
            episode_reply
        set
            content = #{content}
        where
            erno = #{no}
    </update>

    <!-- Delete -->
    <delete id="deleteReply">
        delete from
            episode_reply
        where
            erno = #{value}
    </delete>
</mapper>