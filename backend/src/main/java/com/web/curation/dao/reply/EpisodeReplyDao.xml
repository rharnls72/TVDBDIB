<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.web.curation.dao.reply.EpisodeReplyDao">
    <!-- Create -->
    <insert id="createReply">
        insert into
            episode_reply(
                eno
                , parent_reply
                , uno
                , content
            )
        values(
            #{no}
            , #{parent_reply}
            , #{writer_uno}
            , #{content}
        )
    </insert>
    <!-- Read -->
    <select id="getReplyList" resultType="Reply">
        SELECT 
            sub.erno                AS `no`,
            sub.parent_reply        AS `parent_reply`,
            sub.content             AS `content`,
            sub.write_date          AS `write_date`,
            sub.writer_uno          AS `writer_uno`,
            sub.writer_nick_name    AS `writer_nick_name`,
            sub.writer_profile_pic  AS `writer_profile_pic`,
            sub.like_num            AS `like_num`,
            sub.reply_num           AS `reply_num`,
            liker.uno               AS `liker_uno`,
            liker.nick_name         AS `liker_nick_name`
        FROM
            (
            SELECT 
                *
            FROM
                `episode_reply_view`
            WHERE
                `eno` = #{no}
                AND
                `parent_reply` IS NULL
            ORDER BY `like_num` DESC
            LIMIT ${start} , 20
            ) sub
                LEFT OUTER JOIN
            `episode_reply_like` l ON sub.erno = l.erno
                LEFT OUTER JOIN
            `user` liker ON l.uno = liker.uno
        ORDER BY `no` , `like_num` DESC;
    </select>

    <select id="getReReplyList" resultType="Reply">
        SELECT 
            sub.erno                AS `no`,
            sub.parent_reply        AS `parent_reply`,
            sub.content             AS `content`,
            sub.write_date          AS `write_date`,
            sub.writer_uno          AS `writer_uno`,
            sub.writer_nick_name    AS `writer_nick_name`,
            sub.writer_profile_pic  AS `writer_profile_pic`,
            sub.like_num            AS `like_num`,
            liker.uno               AS `liker_uno`,
            liker.nick_name         AS `liker_nick_name`
        FROM
            (
            SELECT 
                *
            FROM
                `episode_reply_view`
            WHERE
                `parent_reply` = #{no}
            ORDER BY `like_num` DESC
            LIMIT ${start} , 20
            ) sub
                LEFT OUTER JOIN
            `episode_reply_like` l ON sub.erno = l.erno
                LEFT OUTER JOIN
            `user` liker ON l.uno = liker.uno
        ORDER BY `no` , `like_num` DESC;
    </select>

    <!-- Update -->
    <update id="modifyReply">
        update
            episode_reply
        set
            content = #{content}
        where
            erno = #{no}
    </update>

    <!-- Delete -->
    <delete id="deleteReply">
        delete from
            episode_reply
        where
            erno = #{value}
    </delete>
</mapper>